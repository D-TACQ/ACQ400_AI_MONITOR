#!/bin/sh

PIDF=/var/run/ai_monitor_all.pid
LOG=/var/log/ai_monitor.log

VERBOSE=${VERBOSE:-0}

start() {
	/usr/local/bin/procServ \
		-c / -p ${PIDF} -L $LOG \
		2223 \
	/usr/local/bin/ai_monitor_all run_monitor
}

stop() {
        if [ -r ${PIDF} ]; then
                kill -s TERM $(cat ${PIDF})
                rm ${PIDF}
        fi
}

ONDEMUX_COMPLETE=/tmp/ondemux_complete


make_ondemux_complete() {
cat - >$ONDEMUX_COMPLETE <<EOF
#!/bin/sh
for s in $*
do
	date > /dev/shm/AI.\$s.wf.fin
done
EOF
chmod a+rx $ONDEMUX_COMPLETE
}



link_aggregator_sites() 
{
	RUNLOG=/var/log/run0.log
	if [ -e $RUNLOG ]; then
		sites=$(awk '{ print $2 }' <$RUNLOG | sed -e s'/,/ /g')
		logger -t ai_monitor link_aggregator_sites RUNLOG $sites
		echo > /dev/console ai_monitor link_aggregator_sites RUNLOG $sites
	else
		ASITES=$(awk '{ print $2 }' </etc/acq400/0/aggregator | tr ,  \  | sed -e s/=/=\"/ -e s/\$/\"/)
		eval $ASITES
		logger -t ai_monitor link_aggregator_sites AGGREGATOR $sites
		echo > /dev/console ai_monitor link_aggregator_sites AGGREGATOR $sites
	fi
	make_ondemux_complete $sites


	let ACH=1; for site in $sites
	do
		TWF=/dev/shm/AI.$site.wf
		[ -d $TWF ] || mkdir $TWF

		for ch in $(seq 1 $(cat /etc/acq400/$site/active_chan))
		do
			lhs=/dev/shm/AI.0.wf/$(printf "CH%02d" $ACH)
			rhs=$TWF/$(printf "CH%02d" $ch)
			[ -L $rhs ] || ln -s $lhs $rhs
			let ACH=$ACH+1
		done
	done
}

run_monitor() {
	while [ ! -e /etc/acq400/0/data32 ]; do
		/usr/bin/logger -t ai_monitor_all \
			"waiting for /etc/acq400/0/data32"
		sleep 2
	done

	SX=/dev/acq400.0
	SITE=${SX#*.}
	OPTS="--verbose $VERBOSE "
	DATA32=$(cat /etc/acq400/$SITE/data32)
	if [ $DATA32 -eq 1 ]; then
		OPTS="$OPTS -w 4"
	fi
	NCFILE=/etc/acq400/$SITE/NCHAN
	NCHAN=0
	if [ -e $NCFILE ]; then
		NCHAN=$(cat $NCFILE)
		OPTS="$OPTS --nchan $NCHAN"
	fi	
	if [ $NCHAN -gt 0 ]; then
		link_aggregator_sites
		OPTS="$OPTS --oncompletion $ONDEMUX_COMPLETE"
	fi

	echo run /usr/local/bin/acq400_stream $OPTS --hb0 $SITE
	/usr/local/bin/acq400_stream $OPTS --hb0 $SITE &

	forsleep update-histo 2>&1 >/dev/null &
	wait;wait;wait
}

trap "pkill -s 0" SIGINT SIGTERM

case "$1" in
run_monitor)
	echo >/dev/console run_monitor 01
	run_monitor
	echo >/dev/console run_monitor 99
	;;
start)
	stop; start;;
stop)
	stop;;
esac


